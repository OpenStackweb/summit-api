# This is a basic workflow to help you get started with Actions

name: Unit Tests On Push

# Controls when the workflow will run
on: push

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "unit-tests"
  unit-tests:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    env:
      APP_ENV: testing
      APP_DEBUG: true
      APP_KEY: base64:4vh0op/S1dAsXKQ2bbdCfWRyCI9r8NNIdPXyZWt9PX4=
      DEV_EMAIL_TO: smarcet@gmail.com
      APP_URL: http://localhost
      DB_CONNECTION: model
      DB_HOST:  127.0.0.1
      DB_PORT: 3306
      DB_DATABASE: api_config
      DB_USERNAME: root
      DB_PASSWORD: 1qaz2wsx
      SS_DB_HOST:  127.0.0.1
      SS_DB_PORT: 3310
      SS_DATABASE: api_model
      SS_DB_USERNAME: root
      SS_DB_PASSWORD: 1qaz2wsx
      REDIS_HOST: 127.0.0.1
      REDIS_PORT: 6379
      REDIS_DB: 0
      REDIS_PASSWORD: 1qaz2wsx
      REDIS_DATABASES: 16
      SSL_ENABLED: false
      SESSION_DRIVER: redis
      PHP_VERSION: 8.3
      CACHE_DRIVER: redis
      SESSION_COOKIE_DOMAIN: localhost
      SESSION_COOKIE_SECURE: false
      QUEUE_DRIVER: redis
      REGISTRATION_DEFAULT_PAYMENT_PROVIDER: Stripe
      REGISTRATION_DEFAULT_STRIPE_TEST_MODE: true
      REGISTRATION_DEFAULT_LIVE_STRIPE_PRIVATE_KEY:
      REGISTRATION_DEFAULT_LIVE_STRIPE_PUBLISHABLE_KEY:
      REGISTRATION_DEFAULT_LIVE_WEBHOOK_SECRET:
      REGISTRATION_DEFAULT_TEST_STRIPE_PRIVATE_KEY: sk_test_12345
      REGISTRATION_DEFAULT_TEST_STRIPE_PUBLISHABLE_KEY: pk_12345
      REGISTRATION_DEFAULT_TEST_WEBHOOK_SECRET: whsec_12345
      BOOKABLE_ROOMS_DEFAULT_PAYMENT_PROVIDER: Stripe
      BOOKABLE_ROOMS_DEFAULT_STRIPE_TEST_MODE: true
      BOOKABLE_ROOMS_DEFAULT_LIVE_STRIPE_PRIVATE_KEY:
      BOOKABLE_ROOMS_DEFAULT_LIVE_STRIPE_PUBLISHABLE_KEY:
      BOOKABLE_ROOMS_DEFAULT_LIVE_WEBHOOK_SECRET:
      BOOKABLE_ROOMS_DEFAULT_TEST_STRIPE_PRIVATE_KEY: sk_test_12345
      BOOKABLE_ROOMS_DEFAULT_TEST_STRIPE_PUBLISHABLE_KEY: pk_12345
      BOOKABLE_ROOMS_DEFAULT_TEST_WEBHOOK_SECRET: whsec_12345
      REGISTRATION_VALIDATE_TICKET_TYPE_REMOVAL: false
    services:
      mysql_api_model:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: ${{env.SS_DB_PASSWORD}}
          MYSQL_DATABASE: ${{env.SS_DATABASE}}
        ports:
          - 3310:3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=10
      mysql_api_config:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD:  ${{env.DB_PASSWORD}}
          MYSQL_DATABASE: ${{env.DB_DATABASE}}
        ports:
          - 3306:3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=10

    steps:
      - name: Create Redis
        uses: supercharge/redis-github-action@1.7.0
        with:
          redis-port: ${{env.REDIS_PORT}}
          redis-password: ${{env.REDIS_PASSWORD}}
      # Downloads a copy of the code in your repository before running CI tests
      - name: Check out repository code
        uses: actions/checkout@v4
      - name: Install PHP
        uses: "shivammathur/setup-php@v2"
        with:
          php-version:  ${{env.PHP_VERSION}}
          extensions: pdo_mysql, mbstring, exif, pcntl, bcmath, sockets, gettext
      - name: Install dependencies
        uses: "ramsey/composer-install@v3"
        env:
          COMPOSER_AUTH: '{"github-oauth": {"github.com": "${{ secrets.COMPOSER_AUTH_TOKEN }}"} }'
      - name: 'Run Tests'
        run: |
          ./update_doctrine.sh
          php artisan db:create_test_db --schema=config
          php artisan db:create_test_db --schema=model
          php artisan doctrine:migrations:migrate --no-interaction --em model
          vendor/bin/phpunit --filter "OAuth2SummitApiTest" --log-junit results.xml
      - name: 'Upload Unit Test Output'
        uses: actions/upload-artifact@v4
        with:
          name: output
          path: results.xml
          retention-days: 5